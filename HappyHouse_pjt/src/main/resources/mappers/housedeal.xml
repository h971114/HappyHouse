<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- product.xml
     ==> sql문 작성
     
※주의:에러발생) 
          1. mapper루트에 반드시 namespace속성을 명시해야함 
          2. parameterType=""  resultType="" 에 들어가는 속성에 존재하지 않는 패키지나 클래스는 절대 쓰면 안됨
             parameterType="com.ssafy.dto.Product"  (O)
             parameterType="co.ssafy.dto.Product"   (X)
             
          3. sql문은 각각 종류에 맞는 태그안에 정의하고 그를 식별하기 위한 id속성을 중복되지 않게 작성해야 함.
          4. sql문에 제한된 문자(<,&) 를 표현하는 경우 CDATA섹션을 사용해야 함
             <![CDATA[  select sal from emp where sal<2000    ]]>
             
          5. <select>태그를 사용하는 경우 반드시 속성 resultType을 명시해야 함.
             ==> 에러가 발생하거나 또는 결과값이 null이 나올 수도 있다.
               
          Tip) id속성에는 DAO의 메소드명과 맞추어 주는것이 편리하다~!!    
-->
<mapper namespace="housedeal">

	<!--  
	 <update id="update" parameterType="product">
	    update product set name=#{name},price=#{price},description=#{description} where id=#{id}
	 </update> 
	 
	 <delete id="delete" parameterType="String">
	    delete from product where id=#{id}
	 </delete>


     <select id="select"  parameterType="String"  resultType="product">
	    select id,name,price,description from product where id=#{id}
	 </select>
	 
	 
	 <select id="selectAll" resultType="product">
	    select id,name,price,description from product
	 </select>
	 
	 -->
	 <select id="selectapt" resultType="housedeal">
	    SELECT dealAmount, area, dealYear, dealMonth, dealDay FROM housedeal WHERE code = #{code} and AptName = #{aptName}
	 </select>
	 <select id="selectdeal" resultType="housedeal">
	    SELECT dealAmount, area, dealYear, dealMonth, dealDay FROM housedeal WHERE code = #{code} and AptName = #{aptName} ORDER BY dealYear*1 DESC , dealMonth*1 DESC , dealDay*1 DESC
	 </select>
	
</mapper>







